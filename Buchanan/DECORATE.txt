ACTOR BaseDecoration
{
	+Solid		//Combining 'Solid' with a Height of 0 lets actors
	Radius 32	// walk over these seamlessly if the actor has the
	Height 0	// CANPASS flag...  Otherwise they are blocked.
	States
	{
		Spawn:
			TNT1 A 1
			"####" A 0 ACS_NamedExecuteAlways ("SetMapMarker", 0, 1)
			"####" A 0 A_Jump(256, "Static")
		Static:
			UNKN A -1
			Stop
	}
}

ACTOR BaseHealth : Health
{
	States
	{
		Spawn:
			TNT1 A 1
			"####" A 0 ACS_NamedExecuteAlways ("SetMapMarker", 0, 1)
			"####" A 0 A_Jump(256, "Static")
		Static:
			TNT1 A -1
			Stop
	}
}

ACTOR Active : Inventory
{
	//Given to active enemies.  Keeps them from being affected by patrol points after they see the player.
}

ACTOR Points : ScoreItem
{
	Inventory.Amount 1
	Inventory.MaxAmount 30000
}

ACTOR BotPlayer : Inventory
{
}

ACTOR CastleKey : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	Inventory.MaxAmount 0

	States
	{
		Spawn:
			TNT1 A 1
			"####" A 0 ACS_NamedExecuteAlways ("SetMapMarker", 0, 1)
			"####" A 0 A_Jump(256, "Static")
		Static:
			TNT1 A -1
			Stop
	}
}

ACTOR OilDrum : BaseDecoration 21024
{
	Height 30 
	States
	{
		Static:
			BARL A -1
			Stop
	}
}

ACTOR TableandChairs : BaseDecoration 21025
{
	Height 32 
	States
	{
		Static:
			TAB1 A -1
			Stop
	}
}

ACTOR FloorLamp : BaseDecoration 21026
{
	Height 32
	States
	{
		Static:
			LIT1 A -1 BRIGHT
			Stop
	}
}

ACTOR Chandalier : BaseDecoration 21027
{
	-SOLID
	States
	{
		Static:
			LIT3 A -1 BRIGHT
			Stop
	}
}

ACTOR HangingSkeleton : BaseDecoration 21028
{
	Height 64 
	States
	{
		Static:
			HNG1 A -1
			Stop
	}
}

ACTOR StoneColumn : BaseDecoration 21030
{
	Height 64
	States
	{
		Static:
			COLW A -1
			Stop
	}
}

ACTOR Plant : BaseDecoration 21031
{
	Height 40
	States
	{
		Static:
			PLT1 A -1
			Stop
	}
}

ACTOR Skeleton : BaseDecoration 21032
{
	-SOLID
	States
	{
		Static:
			BONE A -1
			Stop
	}
}

ACTOR Sink : BaseDecoration 21033
{
	Height 40
	States
	{
		Static:
			SINK A -1
			Stop
	}
}

ACTOR PlantInVase : BaseDecoration 21034
{
	Height 50
	States
	{
		Static:
			PLT2 A -1
			Stop
	}
}

ACTOR Table : BaseDecoration 21036
{
	Height 30
	States
	{
		Static:
			TAB2 A -1
			Stop
	}
}

ACTOR GreenCeilingLight : BaseDecoration 21037
{
	-SOLID
	States
	{
		Static:
			LIT5 A -1 BRIGHT
			Stop
	}
}

ACTOR KitchenUtensils : BaseDecoration 21038
{
	-SOLID
	States
	{
		Static:
			POT1 A -1
			Stop
	}
}

ACTOR SuitOfArmor : BaseDecoration 21039
{
	Height 64
	States
	{
		Static:
			KNIG A -1
			Stop
	}
}

ACTOR EmptyCage : BaseDecoration 21040
{
	Height 64 
	States
	{
		Static:
			CAG1 A -1
			Stop
	}
}

ACTOR Cage : BaseDecoration 21041
{
	Height 64
	States
	{
		Static:
			CAG2 A -1
			Stop
	}
}

ACTOR Bones : BaseDecoration 21042
{
	-SOLID
	States
	{
		Static:
			POB1 A -1
			Stop
	}
}

ACTOR DogFood : BaseHealth 21029
{
	+AUTOACTIVATE
	Inventory.Amount 4
	Inventory.MaxAmount 100
	Inventory.PickupSound "pickups/food"
	Inventory.PickupMessage "$PU_DOGFOOD"
	States
	{
	Static:
		HLTH C -1
		Loop
	}
}

ACTOR PlateOfFood : BaseHealth 21047
{
	+AUTOACTIVATE
	Inventory.Amount 10
	Inventory.MaxAmount 100
	Inventory.PickupSound "pickups/food"
	Inventory.PickupMessage "$PU_FOOD"
	States
	{
	Static:
		HLTH D -1
		Loop
	}
}

ACTOR WoodBarrel : BaseDecoration 21058
{
	Height 30
	States
	{
		Static:
			BAR2 A -1
			Stop
	}
}

ACTOR HangingUtensils : BaseDecoration 21067
{
	-SOLID
	States
	{
		Static:
			POT2 A -1
			Stop
	}
}

ACTOR Stove : BaseDecoration 21068
{
	Height 64 
	States
	{
		Static:
			STOV A -1
			Stop
	}
}

ACTOR SpearRack : BaseDecoration 21069
{
	Height 64 
	States
	{
		Static:
			SPEA A -1
			Stop
	}
} 

ACTOR HangingVines : BaseDecoration 21070
{
	-SOLID
	States
	{
		Static:
			VINE A -1
			Stop
	}
}

ACTOR YellowKey : CastleKey 21043
{
	Inventory.PickupSound "pickups/key"
	Inventory.PickupMessage "$PU_YKEY"
	//Inventory.Icon "YKEY"
	States
	{
		Pickup:
			KEYS A 0 A_GiveInventory("YellowCard")
			Stop
	        Static:
			KEYS A -1
			Stop
	}
}

ACTOR BlueKey : CastleKey 21044
{
	Inventory.PickupSound "pickups/key"
	Inventory.PickupMessage "$PU_BKEY"
	//Inventory.Icon "BKEY"
	States
	{
		Pickup:
			KEYS B 0 A_GiveInventory("BlueCard")
			Stop
		Static:
			KEYS B -1
			Stop
	}
}

ACTOR RedKey : CastleKey 21045
{
	Inventory.PickupSound "pickups/key"
	Inventory.PickupMessage "$PU_RKEY"
	//Inventory.Icon "RKEY"
	States
	{
		Pickup:
			KEYS C 0 A_GiveInventory("RedCard")
			Stop
		Static:
			KEYS C -1
			Stop
	}
}

ACTOR CastleWeapon : Weapon
{
	States
	{
		Spawn:
			TNT1 A 1
			"####" # 0 ACS_NamedExecuteAlways ("SetMapMarker", 0, 3)
			"####" # 0 A_Jump (256, "Static")
		Static:
			UNKN A -1
			Stop
		Deselect:
			"####" A 1 A_Lower
			Loop
		Select:
			"####" # 0 A_ZoomFactor(1.125)
			"####" A 1 A_Raise
			Loop
		Ready:
			"####" A 1
			"####" # 0 A_WeaponReady(WRF_NOBOB)
			Loop
		Fire:
			"####" A 1
			Goto Ready
		Refire:
			"####" # 0  A_Refire
			"####" # 0 A_Jump (256, "Ready") //Used instead of 'Goto Ready' to allow proper inheritance
		Hold:
			"####" A 1
			"####" # 0 A_JumpIfInventory ("BotPlayer", 1, "Hold.Bot")
			"####" # 0 A_JumpIfInventory ("PowerStrength", 1, "Hold.Automatic")
			"####" # 0 A_Jump (256, "Refire")
		Hold.Bot:
			"####" A Random (0, 35) //Force delay, but allow refire, otherwise bots are stupid
		Hold.Automatic:
			"####" # 0 A_Jump (256, "Fire")
	}
}

ACTOR CastleMachineGun : CastleWeapon 21050
{
	Weapon.SelectionOrder 2
	//Inventory.Icon "MGUN"
	Inventory.PickupSound "pickups/mgun"
	Inventory.PickupMessage "$PU_MGUN"
	Weapon.AmmoType "Clip"
	Weapon.AmmoGive 6
	Weapon.AmmoUse 1
	Weapon.YAdjust 8
	Weapon.SlotNumber 3
	AttackSound "weapons/wmachinegun"
	Obituary ""
	Tag "$TAG_MGUN"
	States
	{
		Static:
			MGUN P -1
			Loop
		Ready:
			MGUN W 1
			"####" # 0 A_WeaponReady(WRF_NOBOB)
			Loop
		Fire:
			"####" W 2
			"####" B 2
		Hold:
			"####" W 0
			"####" # 0 ACS_NamedExecuteAlways("A_NoTarget", 0, 3)
			"####" # 0 A_JumpIfCloser (128, "Fire.Close")
			"####" # 0 A_JumpIfCloser (256, "Fire.Medium")
			"####" # 0 A_JumpIfCloser (ACS_NamedExecuteWithResult("A_Random", 0) / 12, "Fire.Missed")
		Fire.Medium:
			"####" C 3 BRIGHT A_FireBullets (3.0, 3.0, 1, ACS_NamedExecuteWithResult("A_Random", 0) / 6, "BulletPuff", FBF_NORANDOM + FBF_USEAMMO)
			Goto Fire.Resume
		Fire.Close:
			"####" C 3 BRIGHT A_FireBullets (3.0, 3.0, 1, ACS_NamedExecuteWithResult("A_Random", 0) / 4, "BulletPuff", FBF_NORANDOM + FBF_USEAMMO)
			Goto Fire.Resume
		Fire.Missed:
			"####" C 3 BRIGHT A_FireBullets (3.0, 3.0, 1, 0, "BulletPuff", FBF_NORANDOM + FBF_USEAMMO)
		Fire.Resume:
			"####" D 3
			"####" D 0 A_ReFire
			"####" E 3
			"####" # 0 A_Jump(256, "Ready")
	}
}

ACTOR CastleEnemy
{
	var int user_active;
	var int user_mapmarker;
	var int user_lost;

	Height 54
	Radius 26
	Mass 10000
	DeathHeight 0 //Must have this and NOT A_NoBlocking/A_Fall so that bodies block doors!
	Painchance 256
	MONSTER 
	+FLOORCLIP
	+FULLVOLACTIVE
	+FULLVOLDEATH
	+DONTGIB
	+FIXMAPTHINGPOS
	BloodColor "FF 00 00"
	DamageFactor "CastleDamage", 0.0
	States
	{
		Raise:
		See:
			"####" A 1 A_JumpIf (user_active > 0, "See.Active")
			"####" A 0 ACS_NamedExecute ("A_AlertActors", 0, tid)
			"####" A 0 A_GiveInventory("Active", 1) // Keep until Patrol Point code can be updated
			"####" A 0 A_SetUserVar("user_active", 1)
		See.Active:
			"####" A 1 A_JumpIf (user_mapmarker > 0, "See.Marked")
			"####" A 0 ACS_NamedExecuteAlways ("SetMapMarker", 0, 0)
			"####" A 0 A_SetUserVar("user_mapmarker", 1)
		See.Marked:
			"####" A 0 A_Jump(256, "Chase")
		Freeze:
			"####" A 0 A_JumpIf(health <= 0, "Dead")
			"####" A -1
			Stop
		UnFreeze:
			"####" A 0 A_JumpIf(health > 0, "See")
			"####" A 0 A_Jump(256, "Dead")
		Invisible:
			"####" A 0 A_CheckFlag("BOSS","Dead")
			TNT1 A -1
			Stop
	}
}

ACTOR CastleSoldierTemplate : CastleEnemy
{
	Health 25
	Speed 3
	States
	{
	Spawn:
		UNKN A 0
	Spawn.Stand:
		"####" EEEEEE 4 A_LookEx (0, 0, 0, 2048, 0, "See")
		Loop
	Spawn.PatrolNoClip:
		"####" A 0 A_JumpIf(angle % 90 == 0, "TurnAround")
		"####" A 6 A_Warp(AAPTR_DEFAULT, 45, 0, 0, 0, WARPF_STOP | WARPF_INTERPOLATE, "Spawn.Patrol")
		"####" A 6 A_Warp(AAPTR_DEFAULT, 90, 0, 0, 0, WARPF_STOP | WARPF_INTERPOLATE, "Spawn.Patrol")
	TurnAround:
		"####" E 10
		"####" EEE 1 ThrustThing (angle * 256 / 360, 1, 0, 0)
		"####" A 0 A_JumpIf((velx != 0) || (vely != 0), "Spawn.Patrol")
		"####" E 10
		"####" EEE 1 ThrustThing (angle * 256 / 360, 1, 0, 0)
		"####" A 0 A_JumpIf((velx != 0) || (vely != 0), "Spawn.Patrol")
		"####" A 0 A_SetAngle(angle + 180)
	Spawn.Patrol:
		"####" AAA 1 ThrustThing (angle * 256 / 360, 1, 0, 0)
		"####" AAA 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		"####" BBBBBB 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		"####" CCC 1 ThrustThing (angle * 256 / 360, 1, 0, 0)
		"####" CCC 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		"####" DDDDDD 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		"####" A 0 A_JumpIf((velx == 0) && (vely == 0), "Spawn.PatrolNoClip")
		Loop
	Chase:
		"####" AAAAA 1 A_Chase
		"####" A 1
		"####" BBBB 1 A_Chase
		"####" CCCCC 1 A_Chase
		"####" CC 1
		"####" DDDD 1 A_Chase
		Goto See
	Missile:
		"####" # 0 A_Stop
		"####" GH 10 A_FaceTarget
		"####" I 8 BRIGHT A_WolfAttack(0, "shots/single", 1.0, 64, 64, 2, 4, 160.0)
		Goto Chase
	Pain:
		"####" A 0 A_JumpIf(health % 1, "Pain.Alt")
		"####" F 5 A_Pain
		Goto Chase
	Pain.Alt:
		"####" J 5 A_Pain
		Goto Chase
	Pain:
		"####" F 6 A_Pain
		Goto Chase
	Death:
		"####" A 0 ACS_NamedExecuteAlways ("A_Drop", 0, 0, 0, user_lost)
		"####" A 0 A_JumpIf(CallACS("A_DeathScream"), 2)
		"####" A 0 A_Scream
		"####" K 7
		"####" L 8
		"####" M 7 A_GiveToTarget("Points", 100)
	Dead:
		"####" N -1
		Stop
	}
}

ACTOR CastleDogTemplate : CastleEnemy
{
	Health 5
	Height 38
	Speed 5
	-CANUSEWALLS
	-ACTIVATEMCROSS
	MeleeDamage 2
	States
	{
	Spawn:
		UNKN A 0
		Goto Spawn.Patrol
	Spawn.PatrolNoClip:
		"####" A 0 A_JumpIf(angle % 90 == 0, "TurnAround")
		"####" A 6 A_Warp(AAPTR_DEFAULT, 45, 0, 0, 0, WARPF_STOP | WARPF_INTERPOLATE, "Spawn.Patrol")
		"####" A 6 A_Warp(AAPTR_DEFAULT, 90, 0, 0, 0, WARPF_STOP | WARPF_INTERPOLATE, "Spawn.Patrol")
	TurnAround:
		"####" AB 5
		"####" CCC 1 ThrustThing (angle * 256 / 360, 1, 0, 0)
		"####" A 0 A_JumpIf((velx != 0) || (vely != 0), "Spawn.Patrol")
		"####" DA 5
		"####" BBB 1 ThrustThing (angle * 256 / 360, 1, 0, 0)
		"####" A 0 A_JumpIf((velx != 0) || (vely != 0), "Spawn.Patrol")
		"####" A 0 A_SetAngle(angle + 180)
	Spawn.Patrol:
		"####" AAA 1 ThrustThing (angle * 256 / 360, 1, 0, 0)
		"####" AAA 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		"####" BBBBBB 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		"####" CCC 1 ThrustThing (angle * 256 / 360, 1, 0, 0)
		"####" CCC 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		"####" DDDDDD 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		"####" A 0 A_JumpIf((velx == 0) && (vely == 0), "Spawn.PatrolNoClip")
		Loop
	Spawn.Stand:
		"####" AAAABBBBCCCCDDDD 1 A_LookEx (0, 0, 0, 2048, 0, "See")
		Loop
	Wander:
		"####" AA 1 A_Wander
		"####" AB 1 A_Look
		"####" BB 1 A_Wander
		"####" BB 1 A_Look
		"####" CC 1 A_Wander
		"####" CC 1 A_Look
		"####" DD 1 A_Wander
		"####" DD 1 A_Look
		Loop
	Chase:
		"####" AAAAA 1 A_Chase
		"####" A 1
		"####" BBBB 1 A_Chase
		"####" CCCCC 1 A_Chase
		"####" CC 1
		"####" DDDD 1 A_Chase
		Goto See
	Melee:
		"####" # 0 A_Stop
		"####" EF 5 A_FaceTarget
		"####" G 5 A_CustomMeleeAttack(random(1,15))
		"####" EA 5
		Goto Chase
	Death:
		//"####" A 0 A_JumpIf(CallACS("A_DeathScream"), 2)
		"####" A 0 A_Scream
		"####" HI 5
		"####" J 5 A_GiveToTarget("Points", 200)
	Dead:
		"####" K -1
		Stop
	}
}

ACTOR Alsatian : CastleDogTemplate 20201
{
	SeeSound "dog/sight"
	AttackSound "dog/attack"
	DeathSound "dog/death"
	Obituary "$DTH_DOG"
	States
	{
	Spawn:
		WDOG A 0
		Goto Spawn.Patrol
	}
}

ACTOR BritishHomeGuard : CastleSoldierTemplate 20002
{
	//SeeSound "bhgs/sight"
	//DeathSound "bhgs/death"
	SeeSound "grunt/sight"
	PainSound "grunt/pain"
	DeathSound "grunt/death"
	Obituary "$DTH_BHGS"
	States
	{
	Spawn:
		BHGS A 0
		Goto Spawn.Stand
	}
}
